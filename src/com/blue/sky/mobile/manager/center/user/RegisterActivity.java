package com.blue.sky.mobile.manager.center.user;import android.os.Bundle;import android.util.Log;import android.view.View;import android.view.View.OnClickListener;import android.widget.EditText;import android.widget.ProgressBar;import android.widget.TextView;import com.blue.sky.common.activity.BaseActivity;import com.blue.sky.common.http.HttpAsyncClient;import com.blue.sky.common.http.HttpResponseCallback;import com.blue.sky.common.utils.*;import com.blue.sky.mobile.manager.R;import java.util.HashMap;import java.util.Map;public class RegisterActivity extends BaseActivity{	private EditText txtRuserName, txtRuserEmail, txtRPassword, txtConfirmword;	private TextView btnRegister;	private TextView lblTitle;	private ProgressBar progressBar;	@Override	public void onCreate(Bundle savedInstanceState)	{				super.onCreate(savedInstanceState);		setContentView(R.layout.sky_activity_register_new);        setHeader("注册", true);		lblTitle = (TextView) findViewById(R.id.tv_title);		btnRegister = (TextView) findViewById(R.id.btn_Register);		btnRegister.setOnClickListener(registerClickListener);		txtRuserName = (EditText) findViewById(R.id.txtUserName);		txtRuserEmail = (EditText) findViewById(R.id.txtUserEmail);		txtRPassword = (EditText) findViewById(R.id.txtPassword);		txtConfirmword = (EditText) findViewById(R.id.txtConfirmPassword);		progressBar = (ProgressBar) this.findViewById(R.id.progressBar);	}	private boolean registerValidate(String userName, String userEmail, String userPwd, String confirmPwd)	{		if(!NetWorkHelper.isConnect(this))		{			lblTitle.setText("网络不可用,请检查网络!");			return false;		}				if (Strings.EMPTY_STRING.equals(userName))		{			lblTitle.setText("请输入昵称!");			return false;		}		if (userName.length() > 20)		{			lblTitle.setText("昵称太长，最多20位!");			return false;		}		if (Strings.isContainSpecialChar(userName))		{			lblTitle.setText("昵称包含特殊字符!");			return false;		}		if (Strings.EMPTY_STRING.equals(userEmail))		{			lblTitle.setText("请输入帐号!");			return false;		}		if (!Strings.checkEmail(userEmail))		{			lblTitle.setText("帐号(Email)格式不对!");			return false;		}		if (Strings.isContainSpecialChar(userEmail))		{			lblTitle.setText("帐号包含特殊字符!");			return false;		}		if (Strings.EMPTY_STRING.equals(userPwd))		{			lblTitle.setText("请输入密码!");			return false;		}		if (userPwd.length() < 6)		{			lblTitle.setText("密码太短,最小6位!");			return false;		}		if (userPwd.length() > 20)		{			lblTitle.setText("密码太长,最多20位!");			return false;		}		if (Strings.EMPTY_STRING.equals(confirmPwd))		{			lblTitle.setText("请输入二次确认密码!");			return false;		}		if (!userPwd.equals(confirmPwd))		{			lblTitle.setText("两次密码不一致,请重新输入!");			return false;		}		return true;	}	private void register(String userName, String userEmail, String userPwd)	{        progressBar.setVisibility(View.VISIBLE);        String url = Constants.UNIT_HTTP_DOMAIN + "/api/register.php";        Map<String,String> params = new HashMap<String,String>();        params.put("action", "register");        params.put("userName", userName);        params.put("userEmail", userEmail);        params.put("userPwd", Encrypt.md5(userPwd));        new HttpAsyncClient(url, null, new HttpResponseCallback() {            @Override            public void onSuccess(String response) {                String result = response;                if (Strings.isNotEmpty(result)) {                    result = result.replace("\r", "").replace("\n", "").trim();                }                if ("showMsg_registerSuccess".equals(result)) {                    lblTitle.setText("注册成功!");                    showToast("注册成功,请登录!");                    startActivity(LoginActivity.class);                    finish();                } else if ("userEmail_IsUsed".equals(result)) {                    lblTitle.setText("Email已经注册,请登录!");                } else if ("userName_IsUsed".equals(result)) {                    lblTitle.setText("昵称已经使用,请更换昵称!");                } else {                    lblTitle.setText("系统注册异常,请稍后在试!");                }                btnRegister.setEnabled(true);            }            @Override            public void onError(String response) {                Log.e(">>>queryPath onError:", response);            }        }).execute();	}	private OnClickListener registerClickListener = new OnClickListener()	{		@Override		public void onClick(View v)		{			progressBar.setVisibility(View.VISIBLE);						String userName = txtRuserName.getText().toString().trim();			String userEmail = txtRuserEmail.getText().toString().trim();			String userPwd = txtRPassword.getText().toString().trim();			String confirmWord = txtConfirmword.getText().toString().trim();			if (registerValidate(userName, userEmail, userPwd, confirmWord))			{                btnRegister.setEnabled(false);                register(userName, userEmail, userPwd);			}			else			{				progressBar.setVisibility(View.GONE);			}		}	};}